-- /Users/Padawitz/ExpanderLib/list_mergesortT
[Mark [] [], Mark [] [], Mark [[4, 0, 0, 0]] [[]], Mark [[]] [], Induction, Mark [] [], SplitTree, Mark [] [], Narrow 1 True, Mark [] [], Simplify 100 False, Mark [] [], Narrow 1 True, Mark [] [], Simplify 100 False, Mark [] [], Mark [] [[0, 0, 0]], Theorem False (F "<===" [F "sorted" [F "merge" [V "s", V "s'"]], F "&" [F "sorted" [V "s"], F "sorted" [V "s'"]]]), Mark [[0, 0, 0]] [], Mark [] [[0, 0, 1]], Theorem False (F "<===" [F "~" [V "s", F "merge" [V "s1", V "s2"]], F "~" [V "s", F "++" [V "s1", V "s2"]]]), Mark [[0, 0, 1]] [], Mark [] [[0, 1, 0]], Mark [[0, 1, 0]] [], Mark [] [[0, 0, 1]], Theorem False (F "<===" [F "~" [F ":" [V "x", F ":" [V "y", V "s"]], F "++" [V "z3", V "z4"]], F "&" [F "~" [V "s", F "++" [V "s1", V "s2"]], F "~" [F ":" [V "x", V "s1"], V "z3"], F "~" [F ":" [V "y", V "s2"], V "z4"]]]), Mark [[0, 0, 1]] [], Mark [] [[0, 1, 0]], Theorem False (F "===>" [F "=" [F "split" [V "s"], F "()" [V "s1", V "s2"]], F "~" [V "s", F "++" [V "s1", V "s2"]]]), Mark [[0, 1, 0]] [], Mark [] [[0, 1, 1]], Theorem False (F "===>" [F "mergesort0" [V "s", V "s'"], F "&" [F "sorted" [V "s'"], F "~" [V "s", V "s'"]]]), Mark [[0, 1, 1]] [], Mark [] [[0, 1, 2]], Theorem False (F "===>" [F "mergesort0" [V "s", V "s'"], F "&" [F "sorted" [V "s'"], F "~" [V "s", V "s'"]]]), Mark [[0, 1, 2]] [], Simplify 1 True, Mark [] [], Simplify 1 True, Mark [] [], Simplify 1 True, Mark [] [], Simplify 1 True, Mark [] [], Simplify 1 True, Mark [] [], Simplify 1 True, Mark [] [], Simplify 1 True, Mark [] [], Simplify 1 True, Mark [] []]