-- /Users/Padawitz/ExpanderLib/blinkzipP

0. Derivation of

blink ~ zip(zeros,ones)

All simplifications are admitted.
Equation removal is safe.

1. Adding

  (~0(z0,z1) <=== z0 = blink & z1 = zip(zeros,ones))

to the axioms and applying COINDUCTION wrt

  (s ~ s' ===> head(s) = head(s') & tail(s) ~ tail(s'))

at positions
[]
of the preceding trees leads to 

All s s':((s = blink & s' = zip(zeros,ones) ===> 
           head(s) = head(s') & ~0(tail(s),tail(s'))))

2. SIMPLIFYING parallel the preceding trees (8 steps) leads to 

~0(1:blink,zip(ones,zeros))

3. Adding

  (~0(z2,z3) <=== z2 = 1:blink & z3 = zip(ones,zeros))

to the axioms and applying COINDUCTION wrt

  (s ~ s' ===> head(s) = head(s') & tail(s) ~ tail(s'))

at positions
[]
of the preceding trees leads to 

All s s':((s = 1:blink & s' = zip(ones,zeros) ===> 
           head(s) = head(s') & ~0(tail(s),tail(s'))))

4. SIMPLIFYING parallel the preceding trees (8 steps) leads to 

~0(blink,zip(zeros,ones))

5. NARROWING the preceding trees (one step) leads to 

blink = blink & zip(zeros,ones) = zip(zeros,ones) | 
blink = 1:blink & zip(zeros,ones) = zip(ones,zeros)

The axioms have been MATCHED against their redices.

6. SIMPLIFYING parallel the preceding trees (one step) leads to 

True
The formula coincides with no. 6

