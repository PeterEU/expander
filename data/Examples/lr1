-- lr1

constructs: 	S A B c d mul shift error 
defuncts:   	states labels atoms draw
preds:          ->

axioms:

states == [0] &
labels == [S,A,B,c,d,mul] &
atoms  == [shift,error,S(A),A(B),B(c),B(d),A(A,mul,B)] &

(0,A) -> 1 & (0,B) -> 2 & (0,c) -> 3 & (0,d) -> 4 & 
(1,mul) -> 5 & (5,B) -> 6 & (5,c) -> 3 & (5,d) -> 4 &

(x `in` [c,d] ==> (shift,x) -> branch[0,5]) &
(x `in` [c,d] ==> (error,x) -> branch[1,2,3,4,6]) &
(shift,mul) -> 1 & 
error -> branch[0,5] &
S(A) -> 1 & 
A(B) -> 2 & 
B(c) -> 3 & 
B(d) -> 4 & 
A(A,mul,B) -> 6 & 
(error,mul) -> branch[0,5] &
(A(B),mul) -> 2 & 
(B(c),mul) -> 3 & 
(B(d),mul) -> 4 & 
(A(A,mul,B),mul) -> 6 & 

draw == fun(parseLR(x,y,z),
            shelf(3,11)[tower(2,3)[red$text$state'stack,text$column$x],
                        tower(2,3)[red$text$syntax'trees,
				   shelf(11,9,M,C)$map(frame(5).tree)$y],
                        tower(2,3)[red$text$input,text$column$z]],
            x,tree$x)		-- preprocessing for widgets interpreter

terms: parseLR[c,mul,d]



