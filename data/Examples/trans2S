-- TRANS2S

-- Steffen, Logische Prozessspezifikationen, 1995
-- Beispiele 1.48, 1.50, 1.51

preds:		three NOTthree four five six seven eight five' seven' 
	        X Y
constructs: 	a A
defuncts:   	drawGR
hovars:		X Y

axioms:

states == [1] & labels == [a] & atoms == [A] &

(1,a) -> 1<+>2 & (2,a) -> 3 & (3,a) -> 1<+>4 & (4,a) -> 4 &

A -> branch[2,3,4] &

drawGR == wtree $ fun(sat$x,green$text$x,x,ite(Int$x)(red$text$x,x)) &

(three    <==> MU X.(a#(A\/X))) &
(NOTthree <==> NU X.(a<>(not(A)/\X))) &
(four     <==> NU X.(a#(A/\X))) &
(five     <==> NU X.((a#X)/\six)) &
(six      <==> MU X.(A\/(a#X))) &
(seven    <==> NU X.(MU Y.(a#((A/\X)\/Y)))) &
(eight    <==> NU X.(a#X))

conjects: 

all(three)[2,4] & 		
all(NOTthree)[1,3] &	
four$4 &
five$4 &	
seven$4 &	
all(six)[2..4] &
all(eight)$states &	--> True 

map(eval)[three,NOTthree,four,five,six,seven,eight] &
   --> [[2,4],[1,3],[4],[4],[2,3,4],[4],[1,2,3,4]]

map(stateflow)[three,NOTthree,four,five,six,seven,eight] 
   --> [[2,4],[1,3],[4],[4],[2,3,4],[2,4],[1,2,3,4]]

   --  stateflow$seven yields a wrong result because seven is alternating
