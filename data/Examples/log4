-- LOG4

constructs:	A B C
preds:  	sorted perm actions queens board safe
copreds:	unsorted
fovars: 	x y z s s' s'' n acts acts' val val'

axioms:

  sorted[]
& sorted[x]
& (sorted(x:(y:s)) <=== x <= y & sorted(y:s))

& (unsorted[] ===> False)
& (unsorted[x] ===> False)
& (unsorted(x:(y:s)) ===> x > y | unsorted(y:s))

& perm([],[])
& (perm(s,x:s') <=== x `in` s & perm(s-[x],s'))

& actions(0,x,y,z,[])
& (actions(suc(n),x,y,z,acts++(x,z):acts')
	        <=== actions(n,x,z,y,acts) & actions(n,y,x,z,acts'))

& (queens(n,val) <=== board([1..n],[],val))

& board([],val,val)
& (board(s,val,val') 
	<=== x `in` s & safe(1,x:val) & board(s-[x],x:val,val'))

& (safe(n,[x])   <==> True)
& (safe(n,x:y:s) <==> x =/= y+n & y =/= x+n & safe(n+1,x:s))

conjects:

  sorted[1,3,4]		--> True
& unsorted[1,3,4]	--> False
& perm([1,3,4],s)	--> s = [1,3,4] | s = [1,4,3] | s = [3,1,4] | 
   		        --  s = [3,4,1] | s = [4,1,3] | s = [4,3,1]
& actions(3,A,B,C,acts) --> acts = [(A,C),(A,B),(C,B),(A,C),(B,A),(B,C),(A,C)]
& queens(4,val)		--> val = [3,1,4,2] | val = [2,4,1,3]
& queens(5,val)		--> val = [4,2,5,3,1] | val = [3,5,2,4,1] | 
			--  val = [5,3,1,4,2] | val = [4,1,3,5,2] |   			--  val = [5,2,4,1,3] | val = [1,4,2,5,3] | 
			--  val = [2,5,3,1,4] | val = [1,3,5,2,4] |   			--  val = [3,1,4,2,5] | val = [2,4,1,3,5]

